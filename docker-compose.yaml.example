version: "3"


services:
  web:
    build:
      context: ./docker/web
      dockerfile: Dockerfile
    ports:
      - 5090:5090
    volumes:
      - ./docker/web/static:/app/static
      - ./docker/web/resources/db:/app/resources/db
      - ./docker/web/resources/logs:/app/resources/logs
      - ./docker/web/resources/devices:/app/resources/devices
    environment:
      - LOG_MODE=dev # Способ логирования (dev/prod) dev логирования на уровне DEBUG в консоль, prod логирование на уровне INFO в файл log.log в каталоге resources/logs
      - DEBUG=True
      - WORK_DIR=app # Указывается каталог указанный в Dockerfile
      - TIME_ZONE=Europe/Moscow
      - FORMAT_NOTIFICATION=all # bot, push, all (bot + push)
      - DISCOVERY_PERIOD_SEC=60
      - DISCOVERY_WORKER_POOL=15
      - EXECUTOR_SERVICE_IMPL=PingExecutorService # PingExecutorService - сервис отправляющий ping-запросы, MockExecutorService - сервис используемый для тестирования системы, отправляет случайный ответ.
      - BOT_TOKEN=
      - CHATS_ID=
      - GOTIFY_IP=
      - GOTIFY_PORT=
      - GOTIFY_APP_TOKEN=
      - POSTGRES_DB=web_db
      - POSTGRES_HOST=db
      - POSTGRES_USER=web_app
      - POSTGRES_PASSWORD=web_app
      - POSTGRES_PORT=5432
    command: 'python app/app.py flask run'
    restart: unless-stopped
    depends_on:
      - db

  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./docker/postgres/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=web_db
      - POSTGRES_USER=web_app
      - POSTGRES_PASSWORD=web_app
      - TZ=Europe/Moscow

